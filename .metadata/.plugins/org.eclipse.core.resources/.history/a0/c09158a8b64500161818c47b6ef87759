package graphics;

import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import adapters.HighScores;
import adapters.Player;

/**
 * Show High scores
 */
public class HSFrame extends JOptionPane {
	private static final long serialVersionUID = 1L;

	public HighScores hScore = new HighScores();
	public Panel root;
	public JPanel dataPanel;

	/**
	 * Constructor to set up the data and the UI components
	 */
	public HSFrame() {
		root = new Panel(new BorderLayout());
		setTopPlayer();
		JPanel btnPanel = new JPanel(new GridBagLayout());
		JButton resetBtn = new JButton("Reset High Scores");
		btnPanel.add(resetBtn);
		resetBtn.addActionListener(new ActionListener() {
			String message = "Are you sure you want to reset high scores?";

			@Override
			public void actionPerformed(ActionEvent e) {
				int resultDialog = showConfirmDialog(HSFrame.this, message, "Warning", YES_NO_OPTION, QUESTION_MESSAGE);
				if (resultDialog == YES_OPTION) {
					dataPanel.removeAll();
					hScore.removeAll();
					hScore.writeData();
					dataPanel.repaint();
				}
			}
		});
		root.add(btnPanel, BorderLayout.SOUTH);
		showMessageDialog(this, root, "High Scores", JOptionPane.PLAIN_MESSAGE);
	}

	/**
	 * Add the players to the frame
	 */
	public void setTopPlayer() {
		dataPanel = new JPanel(new GridLayout(10, 1), true);
		JLabel row;
		String line;
		List<Player> list = hScore.getListTopPlayer();
		if (list.isEmpty()) {
			line = "No data!";
			row = new JLabel(line);
			dataPanel.add(row);
		} else
			for (int i = 0; i < list.size(); i++) {
				Player player = list.get(i);
				line = (i + 1) + ". " + player.getName() + ": " + player.getScore();
				row = new JLabel(line);
				dataPanel.add(row);
			}
		root.add(dataPanel, BorderLayout.CENTER);
	}

}
